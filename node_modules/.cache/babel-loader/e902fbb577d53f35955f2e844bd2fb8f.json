{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Carpetas\\\\sebas\\\\Henry\\\\Proyectos Individuales\\\\PI\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllCountries } from \"../../Redux/actions\";\nimport CardCountry from \"../CardCountry/CardCountry\";\nimport NavComponent from \"../Nav/Nav\";\nimport Paginado from \"../Paginado/Paginado\";\nimport style from \"./Home.module.css\";\nimport { useEffect, useState } from \"react\";\nimport ContainerCountry from \"../ContainerCountry/ContainerCard\";\nimport LoadingPage from \"../loadingPage/LoadingPage\";\nimport SearchBar from \"../Searcher/Searcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  let dispatch = useDispatch();\n  const countries = useSelector(state => state.countries);\n  const [countriesCopy, setCountriesCopy] = useState(countries);\n  const upDateCountries = newCountries => {\n    setCountriesCopy(newCountries);\n  };\n  useEffect(() => {\n    dispatch(getAllCountries()).then(data => {\n      setCountries(data); // Actualiza el estado con los datos cargados\n    }).catch(error => {\n      console.error(\"Error al cargar los países:\", error);\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: countries.length === 0 ? /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.innerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.containerNavAndSearch,\n        children: [/*#__PURE__*/_jsxDEV(NavComponent, {\n          className: style.navBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          className: style.Search,\n          upDateCountries: upDateCountries,\n          countriesCopy: countriesCopy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ContainerCountry, {\n          countries: countriesCopy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"kUd/YY24yxE8nPqarUke+j1zH8Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useDispatch","useSelector","getAllCountries","CardCountry","NavComponent","Paginado","style","useEffect","useState","ContainerCountry","LoadingPage","SearchBar","jsxDEV","_jsxDEV","Home","_s","dispatch","countries","state","countriesCopy","setCountriesCopy","upDateCountries","newCountries","then","data","setCountries","catch","error","console","className","container","children","length","fileName","_jsxFileName","lineNumber","columnNumber","innerContainer","containerNavAndSearch","navBar","Search","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Carpetas/sebas/Henry/Proyectos Individuales/PI/PI-Countries-main/client/src/components/Home/Home.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllCountries } from \"../../Redux/actions\";\r\nimport CardCountry from \"../CardCountry/CardCountry\";\r\nimport NavComponent from \"../Nav/Nav\";\r\nimport Paginado from \"../Paginado/Paginado\";\r\nimport style from \"./Home.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ContainerCountry from \"../ContainerCountry/ContainerCard\";\r\nimport LoadingPage from \"../loadingPage/LoadingPage\";\r\nimport SearchBar from \"../Searcher/Searcher\";\r\n\r\nconst Home = () => {\r\n    let dispatch = useDispatch();\r\n    const countries = useSelector((state) => state.countries);\r\n    const [countriesCopy, setCountriesCopy] = useState(countries);\r\n\r\n    const upDateCountries = (newCountries) => {\r\n        setCountriesCopy(newCountries)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountries())\r\n            .then((data) => {\r\n                setCountries(data); // Actualiza el estado con los datos cargados\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error al cargar los países:\", error);\r\n            });\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {countries.length === 0 ? (\r\n                <LoadingPage />\r\n            ) : (\r\n                <div className={style.innerContainer}>\r\n                    <div className={style.containerNavAndSearch}>\r\n                        <NavComponent className={style.navBar} />\r\n                        <SearchBar \r\n                            className={style.Search}\r\n                            upDateCountries={upDateCountries}\r\n                            countriesCopy={countriesCopy}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <ContainerCountry countries={countriesCopy} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,YAAY,MAAM,YAAY;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,SAAS,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAIC,QAAQ,GAAGhB,WAAW,EAAE;EAC5B,MAAMiB,SAAS,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzD,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACS,SAAS,CAAC;EAE7D,MAAMI,eAAe,GAAIC,YAAY,IAAK;IACtCF,gBAAgB,CAACE,YAAY,CAAC;EAClC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACd,eAAe,EAAE,CAAC,CACtBqB,IAAI,CAAEC,IAAI,IAAK;MACZC,YAAY,CAACD,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACV,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKgB,SAAS,EAAEvB,KAAK,CAACwB,SAAU;IAAAC,QAAA,EAC3Bd,SAAS,CAACe,MAAM,KAAK,CAAC,gBACnBnB,OAAA,CAACH,WAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAEfvB,OAAA;MAAKgB,SAAS,EAAEvB,KAAK,CAAC+B,cAAe;MAAAN,QAAA,gBACjClB,OAAA;QAAKgB,SAAS,EAAEvB,KAAK,CAACgC,qBAAsB;QAAAP,QAAA,gBACxClB,OAAA,CAACT,YAAY;UAACyB,SAAS,EAAEvB,KAAK,CAACiC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACzCvB,OAAA,CAACF,SAAS;UACNkB,SAAS,EAAEvB,KAAK,CAACkC,MAAO;UACxBnB,eAAe,EAAEA,eAAgB;UACjCF,aAAa,EAAEA;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACNvB,OAAA;QAAAkB,QAAA,eACIlB,OAAA,CAACJ,gBAAgB;UAACQ,SAAS,EAAEE;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEb;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACrB,EAAA,CAxCID,IAAI;EAAA,QACSd,WAAW,EACRC,WAAW;AAAA;AAAAwC,EAAA,GAF3B3B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}