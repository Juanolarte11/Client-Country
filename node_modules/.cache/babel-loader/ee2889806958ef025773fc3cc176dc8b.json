{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\PI\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\AddActivity\\\\AddActivity.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import Nav from \"../Nav/Nav\";\n\n// const AddActivity = () => {\n//     const [activities, setActivities] = useState(\n//         {\n//             name: null,\n//             difficulty: 3,\n//             duration: null,\n//             season: 'summer',\n//             countries: ''\n//         })\n\n//     return(\n//         <div>\n//             <Nav/>\n//             <h1>New activity</h1>\n\n//         </div>\n//     )\n//     }\n\n// export default AddActivity;\n\nimport React from 'react';\nimport Nav from '../Nav/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  let [activity, setActivity] = React.useState({\n    name: '',\n    difficulty: 3,\n    duration: '',\n    season: 'summer',\n    countries: ''\n  });\n  let [errors, setErrors] = React.useState({});\n  let [countries, setCountries] = React.useState([]);\n  let [addCountries, setAddCountries] = React.useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:3001/countries/').then(resp => resp.json()).then(data => {\n      let myMap = data.map(el => {\n        return {\n          id: el.id,\n          name: el.name\n        };\n      });\n      myMap = myMap.sort(SortArray);\n      setCountries(myMap);\n    });\n  }, []);\n\n  // function SortArray(x, y){\n  //     return x.name.localeCompare(y.name, 'fr', {ignorePunctuation: true});\n  // }\n\n  // function handleChange(e){\n  //     e.preventDefault();\n  //     setActivity((prev) => ({...prev, [e.target.name]: e.target.value}));\n  //     setErrors(validation({...activity, [e.target.name]: e.target.value}));\n  // }\n\n  // function handleChangeName(e){\n  //     e.preventDefault();\n  //     setActivity((prev) => ({...prev, name: e.target.value.trimStart().toLowerCase()}));\n  //     setErrors(validation({...activity, name: e.target.value.trimStart().toLowerCase()}));\n  // }\n\n  // function handleSubmit(e){\n  //     e.preventDefault();\n  //     if(Object.keys(errors).length === 0){\n  //         fetch('http://localhost:3001/activities', {\n  //                 method: 'POST',\n  //                 headers: {'Content-Type': 'application/json;charset=utf-8'},\n  //                 body: JSON.stringify(\n  //                     {\n  //                         name: activity.name,\n  //                         difficulty: activity.difficulty,\n  //                         duration: activity.duration,\n  //                         season: activity.season,\n  //                         country: addCountries\n  //                     })\n  //         })\n  //         .then(res => res.json())\n  //         .then(res =>{\n  //             if(res.hasOwnProperty('msg')) {\n  //                 alert(res.msg);\n  //             }else {\n  //                 alert(res.error);\n  //             }\n  //             setActivity({name: '', difficulty: '', duration: '', season: 'summer', countries: ''});\n  //             setAddCountries([]);\n  //         })\n  //         .catch(e => console.log(e));\n  //     }\n  // }\n\n  // function validation(){\n  //     let errors = {};\n  //     const regexName = /^[a-zA-\\s]+(?: [a-zA-\\s]+)*$/i;\n  //     if(activity.name === '') {\n  //         errors.name = 'Insert the name';\n  //     }\n  //     if(!regexName.test(activity.name)) {\n  //         errors.name = 'The name must has only letters';\n  //     }\n  //     // if(activity.name.length < 3 || activity.name.length > 20) errors.name = \"The name's size isn't valid\";\n\n  //     if(![1,2,3,4,5].includes(parseInt(activity.difficulty))) {\n  //         errors.difficulty = \"The difficult isn't valid\"\n  //     }\n\n  //     let hours = Math.trunc(Number(activity.duration));\n  //     let minutes = hours === 0 ? Number(activity.duration) * 100 : (Number(activity.duration) % hours) * 100;\n\n  //     if((hours > 8) || (minutes === 0 && hours <= 0)) {\n  //         errors.duration = \"The amount of hours is not valid\";\n  //     }\n  //     if(minutes < 0 || minutes > 59) {\n  //         errors.duration = \"The amount of minutes is not valid\";\n  //     }\n  //     if(!['summer','spring','autumn','winter'].includes(activity.season)) {\n  //         errors.season = \"The season isn't valid\";\n  //     }\n  //     if(addCountries.length < 0) {\n  //         errors.countries = \"Select a country\";\n  //     }\n  //     return errors;\n  // }\n\n  // function addCountry(e){\n  //     e.preventDefault();\n  //     if (activity.countries === \"\") {\n  //         setErrors({...errors, countries: 'Select a country as'});\n  //     }else{\n  //         if(addCountries.includes(activity.countries)){\n  //             setErrors({...errors, countries: 'You are already selected this country'});\n\n  //         }else{\n  //             setAddCountries([...addCountries, activity.countries]);\n  //             setActivity({...activity, countries: ''});\n  //         }\n  //     }\n  // }\n\n  // function deleteCountry(id){\n  //     let newList = addCountries.filter(country => country !== id);\n  //     setAddCountries(newList);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"New activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              title: \"The name's size must be a min 3, max 20 and must has only letters\",\n              autocomplete: \"off\",\n              name: \"name\",\n              value: activity.name,\n              onChange: e => handleChangeName(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Duration: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              max: \"10\",\n              step: \"1.00\",\n              title: \"The activity must has a duration between 1 min and 10 hours\",\n              placeholder: \"hrs\",\n              name: \"duration\",\n              value: activity.duration,\n              onChange: e => handleChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Difficult: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"difficult\",\n                value: activity.difficulty,\n                onChange: e => handleChange(e),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"So easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5\",\n                  children: \"So hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Season: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"season\",\n                value: activity.season,\n                onChange: e => handleChange(e),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"summer\",\n                  children: \"Summer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"spring\",\n                  children: \"Spring\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"autumn\",\n                  children: \"Autumn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"winter\",\n                  children: \"Winter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Countries: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"countries\",\n              value: activity.countries,\n              onChange: e => handleChange(e),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"deafult\",\n                selected: true,\n                children: \"Select country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 25\n              }, this), countries.length > 0 && countries.map(el => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: el.id,\n                  children: el.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => addCountry(e),\n              children: \"Add country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"List of countries:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: addCountries.length > 0 && addCountries.map(el => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: el\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => deleteCountry(el),\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleSubmit(e),\n            children: \"Create activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"GdIwmn9yGVc19pNDFVsCG2P4a08=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Nav","jsxDEV","_jsxDEV","Form","_s","activity","setActivity","useState","name","difficulty","duration","season","countries","errors","setErrors","setCountries","addCountries","setAddCountries","useEffect","fetch","then","resp","json","data","myMap","map","el","id","sort","SortArray","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","type","title","autocomplete","value","onChange","e","handleChangeName","min","max","step","placeholder","handleChange","selected","length","onClick","addCountry","deleteCountry","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/PI/PI-Countries-main/client/src/components/AddActivity/AddActivity.jsx"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import Nav from \"../Nav/Nav\";\r\n\r\n\r\n// const AddActivity = () => {\r\n//     const [activities, setActivities] = useState(\r\n//         {\r\n//             name: null,\r\n//             difficulty: 3,\r\n//             duration: null,\r\n//             season: 'summer',\r\n//             countries: ''\r\n//         })\r\n\r\n\r\n//     return(\r\n//         <div>\r\n//             <Nav/>\r\n//             <h1>New activity</h1>\r\n\r\n//         </div>\r\n//     )\r\n//     }\r\n\r\n\r\n// export default AddActivity;\r\n\r\n\r\nimport React from 'react';\r\nimport Nav from '../Nav/Nav';\r\n\r\n\r\nexport default function Form() {\r\n    let [activity, setActivity] = React.useState(\r\n                {\r\n                    name: '',\r\n                    difficulty: 3,\r\n                    duration: '',\r\n                    season: 'summer',\r\n                    countries: ''\r\n                });\r\n\r\n    let [errors, setErrors] = React.useState({});\r\n    let [countries, setCountries] = React.useState([]);\r\n    let [addCountries, setAddCountries] = React.useState([]);\r\n\r\n    React.useEffect(() =>{\r\n        fetch('http://localhost:3001/countries/')\r\n        .then(resp => resp.json())\r\n        .then(data =>{\r\n                let myMap = data.map(el => {return {id: el.id, name: el.name}})\r\n                myMap = myMap.sort(SortArray)\r\n                setCountries(myMap);\r\n            });\r\n    },[]);\r\n\r\n    // function SortArray(x, y){\r\n    //     return x.name.localeCompare(y.name, 'fr', {ignorePunctuation: true});\r\n    // }\r\n\r\n    // function handleChange(e){\r\n    //     e.preventDefault();\r\n    //     setActivity((prev) => ({...prev, [e.target.name]: e.target.value}));\r\n    //     setErrors(validation({...activity, [e.target.name]: e.target.value}));\r\n    // }\r\n\r\n    // function handleChangeName(e){\r\n    //     e.preventDefault();\r\n    //     setActivity((prev) => ({...prev, name: e.target.value.trimStart().toLowerCase()}));\r\n    //     setErrors(validation({...activity, name: e.target.value.trimStart().toLowerCase()}));\r\n    // }\r\n\r\n    // function handleSubmit(e){\r\n    //     e.preventDefault();\r\n    //     if(Object.keys(errors).length === 0){\r\n    //         fetch('http://localhost:3001/activities', {\r\n    //                 method: 'POST',\r\n    //                 headers: {'Content-Type': 'application/json;charset=utf-8'},\r\n    //                 body: JSON.stringify(\r\n    //                     {\r\n    //                         name: activity.name,\r\n    //                         difficulty: activity.difficulty,\r\n    //                         duration: activity.duration,\r\n    //                         season: activity.season,\r\n    //                         country: addCountries\r\n    //                     })\r\n    //         })\r\n    //         .then(res => res.json())\r\n    //         .then(res =>{\r\n    //             if(res.hasOwnProperty('msg')) {\r\n    //                 alert(res.msg);\r\n    //             }else {\r\n    //                 alert(res.error);\r\n    //             }\r\n    //             setActivity({name: '', difficulty: '', duration: '', season: 'summer', countries: ''});\r\n    //             setAddCountries([]);\r\n    //         })\r\n    //         .catch(e => console.log(e));\r\n    //     }\r\n    // }\r\n\r\n    // function validation(){\r\n    //     let errors = {};\r\n    //     const regexName = /^[a-zA-\\s]+(?: [a-zA-\\s]+)*$/i;\r\n    //     if(activity.name === '') {\r\n    //         errors.name = 'Insert the name';\r\n    //     }\r\n    //     if(!regexName.test(activity.name)) {\r\n    //         errors.name = 'The name must has only letters';\r\n    //     }\r\n    //     // if(activity.name.length < 3 || activity.name.length > 20) errors.name = \"The name's size isn't valid\";\r\n\r\n    //     if(![1,2,3,4,5].includes(parseInt(activity.difficulty))) {\r\n    //         errors.difficulty = \"The difficult isn't valid\"\r\n    //     }\r\n\r\n    //     let hours = Math.trunc(Number(activity.duration));\r\n    //     let minutes = hours === 0 ? Number(activity.duration) * 100 : (Number(activity.duration) % hours) * 100;\r\n\r\n    //     if((hours > 8) || (minutes === 0 && hours <= 0)) {\r\n    //         errors.duration = \"The amount of hours is not valid\";\r\n    //     }\r\n    //     if(minutes < 0 || minutes > 59) {\r\n    //         errors.duration = \"The amount of minutes is not valid\";\r\n    //     }\r\n    //     if(!['summer','spring','autumn','winter'].includes(activity.season)) {\r\n    //         errors.season = \"The season isn't valid\";\r\n    //     }\r\n    //     if(addCountries.length < 0) {\r\n    //         errors.countries = \"Select a country\";\r\n    //     }\r\n    //     return errors;\r\n    // }\r\n\r\n    // function addCountry(e){\r\n    //     e.preventDefault();\r\n    //     if (activity.countries === \"\") {\r\n    //         setErrors({...errors, countries: 'Select a country as'});\r\n    //     }else{\r\n    //         if(addCountries.includes(activity.countries)){\r\n    //             setErrors({...errors, countries: 'You are already selected this country'});\r\n                \r\n    //         }else{\r\n    //             setAddCountries([...addCountries, activity.countries]);\r\n    //             setActivity({...activity, countries: ''});\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // function deleteCountry(id){\r\n    //     let newList = addCountries.filter(country => country !== id);\r\n    //     setAddCountries(newList);\r\n    // }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div>\r\n            <Nav/>\r\n            <div>\r\n                    <form>\r\n                    <div>\r\n                                <p>New activity</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            title=\"The name's size must be a min 3, max 20 and must has only letters\"\r\n                            autocomplete=\"off\"\r\n                            name=\"name\"\r\n                            value={activity.name}\r\n                            onChange={(e) => handleChangeName(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Duration: </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            max=\"10\"\r\n                            step=\"1.00\"\r\n                            title='The activity must has a duration between 1 min and 10 hours'\r\n                            placeholder=\"hrs\"\r\n                            name=\"duration\"\r\n                            value={activity.duration}\r\n                            onChange={(e) => handleChange(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                    <div>\r\n                        <label>Difficult: </label>\r\n                        <select\r\n                            name=\"difficult\"\r\n                            value={activity.difficulty}\r\n                            onChange={(e) => handleChange(e)}\r\n                        >\r\n                            <option value=\"1\">So easy</option>\r\n                            <option value=\"2\">Easy</option>\r\n                            <option value=\"3\">Normal</option>\r\n                            <option value=\"4\">Hard</option>\r\n                            <option value=\"5\">So hard</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Season: </label>\r\n                        <select\r\n                            name=\"season\"\r\n                            value={activity.season}\r\n                            onChange={(e) => handleChange(e)}\r\n                        >\r\n                            <option value=\"summer\">Summer</option>\r\n                            <option value=\"spring\">Spring</option>\r\n                            <option value=\"autumn\">Autumn</option>\r\n                            <option value=\"winter\">Winter</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Countries: </label>\r\n                        <select\r\n                            name=\"countries\"\r\n                            value={activity.countries}\r\n                            onChange={(e) => handleChange(e)}\r\n                        >\r\n                        <option value=\"deafult\" selected>Select country</option>\r\n                            {\r\n                                countries.length > 0 && countries.map(el =>\r\n                                    {\r\n                                        return (\r\n                                            <option value={el.id}>{el.name}</option>\r\n                                        )\r\n                                    })\r\n                            }\r\n                        </select>\r\n                        <button onClick={(e) => addCountry(e)}>Add country</button>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p>List of countries:</p>\r\n                            <div>\r\n                                {\r\n                                    addCountries.length > 0 && addCountries.map(el =>\r\n                                        {\r\n                                            return (\r\n                                                <div>\r\n                                                    <span>{el}</span>\r\n                                                        <button type=\"button\" onClick={() => deleteCountry(el)}>X</button>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                            </div>\r\n                        </div>\r\n                        <button \r\n                            onClick={(e) => handleSubmit(e)}>Create activity\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAChC;IACIC,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE;EACf,CAAC,CAAC;EAEd,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,IAAI,CAACK,SAAS,EAAEG,YAAY,CAAC,GAAGhB,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAClD,IAAI,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGlB,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAExDR,KAAK,CAACmB,SAAS,CAAC,MAAK;IACjBC,KAAK,CAAC,kCAAkC,CAAC,CACxCC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAG;MACL,IAAIC,KAAK,GAAGD,IAAI,CAACE,GAAG,CAACC,EAAE,IAAI;QAAC,OAAO;UAACC,EAAE,EAAED,EAAE,CAACC,EAAE;UAAEnB,IAAI,EAAEkB,EAAE,CAAClB;QAAI,CAAC;MAAA,CAAC,CAAC;MAC/DgB,KAAK,GAAGA,KAAK,CAACI,IAAI,CAACC,SAAS,CAAC;MAC7Bd,YAAY,CAACS,KAAK,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACItB,OAAA,CAACH,KAAK,CAAC+B,QAAQ;IAAAC,QAAA,eACf7B,OAAA;MAAA6B,QAAA,gBACI7B,OAAA,CAACF,GAAG;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACNjC,OAAA;QAAA6B,QAAA,eACQ7B,OAAA;UAAA6B,QAAA,gBACA7B,OAAA;YAAA6B,QAAA,eACY7B,OAAA;cAAA6B,QAAA,EAAG;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAI;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACzB,eACNjC,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAO;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eACrBjC,OAAA;cACIkC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAC,mEAAmE;cACzEC,YAAY,EAAC,KAAK;cAClB9B,IAAI,EAAC,MAAM;cACX+B,KAAK,EAAElC,QAAQ,CAACG,IAAK;cACrBgC,QAAQ,EAAGC,CAAC,IAAKC,gBAAgB,CAACD,CAAC;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACvC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACA,eAENjC,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAO;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eACzBjC,OAAA;cACIkC,IAAI,EAAC,QAAQ;cACbO,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC,IAAI;cACRC,IAAI,EAAC,MAAM;cACXR,KAAK,EAAC,6DAA6D;cACnES,WAAW,EAAC,KAAK;cACjBtC,IAAI,EAAC,UAAU;cACf+B,KAAK,EAAElC,QAAQ,CAACK,QAAS;cACzB8B,QAAQ,EAAGC,CAAC,IAAKM,YAAY,CAACN,CAAC;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACA,eAENjC,OAAA;YAAA6B,QAAA,gBACA7B,OAAA;cAAA6B,QAAA,gBACI7B,OAAA;gBAAA6B,QAAA,EAAO;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAQ,eAC1BjC,OAAA;gBACIM,IAAI,EAAC,WAAW;gBAChB+B,KAAK,EAAElC,QAAQ,CAACI,UAAW;gBAC3B+B,QAAQ,EAAGC,CAAC,IAAKM,YAAY,CAACN,CAAC,CAAE;gBAAAV,QAAA,gBAEjC7B,OAAA;kBAAQqC,KAAK,EAAC,GAAG;kBAAAR,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eAClCjC,OAAA;kBAAQqC,KAAK,EAAC,GAAG;kBAAAR,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eAC/BjC,OAAA;kBAAQqC,KAAK,EAAC,GAAG;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACjCjC,OAAA;kBAAQqC,KAAK,EAAC,GAAG;kBAAAR,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eAC/BjC,OAAA;kBAAQqC,KAAK,EAAC,GAAG;kBAAAR,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAC7B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACP,eAENjC,OAAA;cAAA6B,QAAA,gBACI7B,OAAA;gBAAA6B,QAAA,EAAO;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAQ,eACvBjC,OAAA;gBACIM,IAAI,EAAC,QAAQ;gBACb+B,KAAK,EAAElC,QAAQ,CAACM,MAAO;gBACvB6B,QAAQ,EAAGC,CAAC,IAAKM,YAAY,CAACN,CAAC,CAAE;gBAAAV,QAAA,gBAEjC7B,OAAA;kBAAQqC,KAAK,EAAC,QAAQ;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACtCjC,OAAA;kBAAQqC,KAAK,EAAC,QAAQ;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACtCjC,OAAA;kBAAQqC,KAAK,EAAC,QAAQ;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACtCjC,OAAA;kBAAQqC,KAAK,EAAC,QAAQ;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACjC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACJ,eAENjC,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAO;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eACtBjC,OAAA;cACIM,IAAI,EAAC,WAAW;cAChB+B,KAAK,EAAElC,QAAQ,CAACO,SAAU;cAC1B4B,QAAQ,EAAGC,CAAC,IAAKM,YAAY,CAACN,CAAC,CAAE;cAAAV,QAAA,gBAErC7B,OAAA;gBAAQqC,KAAK,EAAC,SAAS;gBAACS,QAAQ;gBAAAjB,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS,EAEhDvB,SAAS,CAACqC,MAAM,GAAG,CAAC,IAAIrC,SAAS,CAACa,GAAG,CAACC,EAAE,IACpC;gBACI,oBACIxB,OAAA;kBAAQqC,KAAK,EAAEb,EAAE,CAACC,EAAG;kBAAAI,QAAA,EAAEL,EAAE,CAAClB;gBAAI;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAU;cAEhD,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAEL,eACTjC,OAAA;cAAQgD,OAAO,EAAGT,CAAC,IAAKU,UAAU,CAACV,CAAC,CAAE;cAAAV,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrD,eAENjC,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAG;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI,eACzBjC,OAAA;cAAA6B,QAAA,EAEQf,YAAY,CAACiC,MAAM,GAAG,CAAC,IAAIjC,YAAY,CAACS,GAAG,CAACC,EAAE,IAC1C;gBACI,oBACIxB,OAAA;kBAAA6B,QAAA,gBACI7B,OAAA;oBAAA6B,QAAA,EAAOL;kBAAE;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAQ,eACbjC,OAAA;oBAAQkC,IAAI,EAAC,QAAQ;oBAACc,OAAO,EAAEA,CAAA,KAAME,aAAa,CAAC1B,EAAE,CAAE;oBAAAK,QAAA,EAAC;kBAAC;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAS;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACpE;cAEd,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAER;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACJ,eACNjC,OAAA;YACIgD,OAAO,EAAGT,CAAC,IAAKY,YAAY,CAACZ,CAAC,CAAE;YAAAV,QAAA,EAAC;UACrC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACW;AAEzB;AAAC/B,EAAA,CAzOuBD,IAAI;AAAAmD,EAAA,GAAJnD,IAAI;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}