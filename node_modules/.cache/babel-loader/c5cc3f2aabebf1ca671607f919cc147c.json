{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\PI\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\AddActivity\\\\AddActivity.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Nav from \"../Nav/Nav\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddActivity = () => {\n  _s();\n  const [activities, setActivities] = useState({\n    name: null,\n    difficulty: 3,\n    duration: 0,\n    season: 'summer',\n    countries: ''\n  });\n  const [countries, setCountries] = useState([]);\n  useEffect(async () => {\n    let response = await axios('http://localhost:3001/countries');\n    setCountries(response.data);\n  }, []);\n  const handleChange = e => {\n    setActivities({\n      ...activities,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"/activity\", {\n      activities\n    });\n    alert(\"se envio la nueva actividad\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: activities.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          name: \"difficulty\",\n          value: activities.difficulty,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"10\",\n          name: \"duration\",\n          value: activities.duration,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Season: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"season\",\n          value: activities.season,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"summer\",\n            children: \"Summer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"spring\",\n            children: \"Spring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"autumn\",\n            children: \"Autumn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"winter\",\n            children: \"Winter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Countries: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"countries\",\n          value: activities.countries,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), countries.length > 0 && countries.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: el.id,\n              children: el.name\n            }, el.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 45\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(AddActivity, \"B7lI7J685RNjMKRdcwiQQMDMakI=\");\n_c = AddActivity;\nexport default AddActivity;\n\n// import React from 'react';\n// import Nav from '../Nav/Nav';\n\n// export default function Form() {\n//     let [activity, setActivity] = React.useState(\n//                 {\n//                     name: '',\n//                     difficulty: 3,\n//                     duration: '',\n//                     season: 'summer',\n//                     countries: ''\n//                 });\n\n//     let [errors, setErrors] = React.useState({});\n//     let [countries, setCountries] = React.useState([]);\n//     let [addCountries, setAddCountries] = React.useState([]);\n\n//     React.useEffect(() =>{\n//         fetch('http://localhost:3001/countries/')\n//         .then(resp => resp.json())\n//         .then(data =>{\n//                 let myMap = data.map(el => {return {id: el.id, name: el.name}})\n//                 myMap = myMap.sort(SortArray)\n//                 setCountries(myMap);\n//             });\n//     },[]);\n\n//     function SortArray(x, y){\n//         return x.name.localeCompare(y.name, 'fr', {ignorePunctuation: true});\n//     }\n\n//     function handleChange(e){\n//         e.preventDefault();\n//         setActivity((prev) => ({...prev, [e.target.name]: e.target.value}));\n//         setErrors(validation({...activity, [e.target.name]: e.target.value}));\n//     }\n\n//     function handleChangeName(e){\n//         e.preventDefault();\n//         setActivity((prev) => ({...prev, name: e.target.value.trimStart().toLowerCase()}));\n//         setErrors(validation({...activity, name: e.target.value.trimStart().toLowerCase()}));\n//     }\n\n//     function handleSubmit(e){\n//         e.preventDefault();\n//         if(Object.keys(errors).length === 0){\n//             fetch('http://localhost:3001/activities', {\n//                     method: 'POST',\n//                     headers: {'Content-Type': 'application/json;charset=utf-8'},\n//                     body: JSON.stringify(\n//                         {\n//                             name: activity.name,\n//                             difficulty: activity.difficulty,\n//                             duration: activity.duration,\n//                             season: activity.season,\n//                             country: addCountries\n//                         })\n//             })\n//             .then(res => res.json())\n//             .then(res =>{\n//                 if(res.hasOwnProperty('msg')) {\n//                     alert(res.msg);\n//                 }else {\n//                     alert(res.error);\n//                 }\n//                 setActivity({name: '', difficulty: '', duration: '', season: 'summer', countries: ''});\n//                 setAddCountries([]);\n//             })\n//             .catch(e => console.log(e));\n//         }\n//     }\n\n//     function validation(){\n//         let errors = {};\n//         const regexName = /^[a-zA-\\s]+(?: [a-zA-\\s]+)*$/i;\n//         if(activity.name === '') {\n//             errors.name = 'Insert the name';\n//         }\n//         if(!regexName.test(activity.name)) {\n//             errors.name = 'The name must has only letters';\n//         }\n//         // if(activity.name.length < 3 || activity.name.length > 20) errors.name = \"The name's size isn't valid\";\n\n//         if(![1,2,3,4,5].includes(parseInt(activity.difficulty))) {\n//             errors.difficulty = \"The difficult isn't valid\"\n//         }\n\n//         let hours = Math.trunc(Number(activity.duration));\n//         let minutes = hours === 0 ? Number(activity.duration) * 100 : (Number(activity.duration) % hours) * 100;\n\n//         if((hours > 8) || (minutes === 0 && hours <= 0)) {\n//             errors.duration = \"The amount of hours is not valid\";\n//         }\n//         if(minutes < 0 || minutes > 59) {\n//             errors.duration = \"The amount of minutes is not valid\";\n//         }\n//         if(!['summer','spring','autumn','winter'].includes(activity.season)) {\n//             errors.season = \"The season isn't valid\";\n//         }\n//         if(addCountries.length < 0) {\n//             errors.countries = \"Select a country\";\n//         }\n//         return errors;\n//     }\n\n//     function addCountry(e){\n//         e.preventDefault();\n//         if (activity.countries === \"\") {\n//             setErrors({...errors, countries: 'Select a country as'});\n//         }else{\n//             if(addCountries.includes(activity.countries)){\n//                 setErrors({...errors, countries: 'You are already selected this country'});\n\n//             }else{\n//                 setAddCountries([...addCountries, activity.countries]);\n//                 setActivity({...activity, countries: ''});\n//             }\n//         }\n//     }\n\n//     function deleteCountry(id){\n//         let newList = addCountries.filter(country => country !== id);\n//         setAddCountries(newList);\n//     }\n\n//     return (\n//         <React.Fragment>\n//         <div>\n//             <Nav/>\n//             <div>\n//                     <form>\n//                     <div>\n//                                 <p>New activity</p>\n//                     </div>\n//                     <div>\n//                         <label>Name: </label>\n//                         <input\n//                             type=\"text\"\n//                             title=\"The name's size must be a min 3, max 20 and must has only letters\"\n//                             autocomplete=\"off\"\n//                             name=\"name\"\n//                             value={activity.name}\n//                             onChange={(e) => handleChangeName(e)}\n//                         />\n//                     </div>\n\n//                     <div>\n//                         <label>Duration: </label>\n//                         <input\n//                             type=\"number\"\n//                             min=\"0\"\n//                             max=\"10\"\n//                             step=\"1.00\"\n//                             title='The activity must has a duration between 1 min and 10 hours'\n//                             placeholder=\"hrs\"\n//                             name=\"duration\"\n//                             value={activity.duration}\n//                             onChange={(e) => handleChange(e)}\n//                         />\n//                     </div>\n\n//                     <div>\n//                     <div>\n//                         <label>Difficult: </label>\n//                         <select\n//                             name=\"difficult\"\n//                             value={activity.difficulty}\n//                             onChange={(e) => handleChange(e)}\n//                         >\n//                             <option value=\"1\">So easy</option>\n//                             <option value=\"2\">Easy</option>\n//                             <option value=\"3\">Normal</option>\n//                             <option value=\"4\">Hard</option>\n//                             <option value=\"5\">So hard</option>\n//                         </select>\n//                     </div>\n\n//                     <div>\n//                         <label>Season: </label>\n//                         <select\n//                             name=\"season\"\n//                             value={activity.season}\n//                             onChange={(e) => handleChange(e)}\n//                         >\n//                             <option value=\"summer\">Summer</option>\n//                             <option value=\"spring\">Spring</option>\n//                             <option value=\"autumn\">Autumn</option>\n//                             <option value=\"winter\">Winter</option>\n//                         </select>\n//                     </div>\n//                 </div>\n\n//                 <div>\n//                     <label>Countries: </label>\n//                         <select\n//                             name=\"countries\"\n//                             value={activity.countries}\n//                             onChange={(e) => handleChange(e)}\n//                         >\n//                         <option value=\"default\" selected>Select country</option>\n//                             {\n//                                 countries.length > 0 && countries.map(el =>\n//                                     {\n//                                         return (\n//                                             <option value={el.id}>{el.name}</option>\n//                                         )\n//                                     })\n//                             }\n//                         </select>\n//                         <button onClick={(e) => addCountry(e)}>Add country</button>\n//                         </div>\n\n//                         <div>\n//                             <p>List of countries:</p>\n//                             <div>\n//                                 {\n//                                     addCountries.length > 0 && addCountries.map(el =>\n//                                         {\n//                                             return (\n//                                                 <div>\n//                                                     <span>{el}</span>\n//                                                         <button type=\"button\" onClick={() => deleteCountry(el)}>X</button>\n//                                                 </div>\n//                                             )\n//                                         })\n//                                         }\n//                             </div>\n//                         </div>\n//                         <button \n//                             onClick={(e) => handleSubmit(e)}>Create activity\n//                         </button>\n//                     </form>\n//                 </div>\n//         </div>\n//         </React.Fragment>\n//     )\n// }\nvar _c;\n$RefreshReg$(_c, \"AddActivity\");","map":{"version":3,"names":["useState","useEffect","Nav","axios","jsxDEV","_jsxDEV","AddActivity","_s","activities","setActivities","name","difficulty","duration","season","countries","setCountries","response","data","handleChange","e","target","value","handleSubmit","preventDefault","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","min","max","length","map","el","id","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/PI/PI-Countries-main/client/src/components/AddActivity/AddActivity.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst AddActivity = () => {\r\n    const [activities, setActivities] = useState(\r\n        {\r\n            name: null,\r\n            difficulty: 3,\r\n            duration: 0,\r\n            season: 'summer',\r\n            countries: ''\r\n        })\r\n    \r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(async () => {\r\n        let response = await axios('http://localhost:3001/countries')\r\n        setCountries(response.data)\r\n    },[])\r\n\r\n    const handleChange = (e) => {\r\n        setActivities({\r\n            ...activities,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/activity\", {activities})\r\n        alert(\"se envio la nueva actividad\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Nav/>\r\n            <h1>New activity</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={activities.name}\r\n                        onChange= {handleChange}\r\n                    />\r\n                </div>\r\n    \r\n                <div>\r\n                    <label>Difficulty</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min='1'\r\n                        max='5'\r\n                        name=\"difficulty\"\r\n                        value={activities.difficulty}\r\n                        onChange= {handleChange}\r\n                    />         \r\n                </div>\r\n\r\n                <div>\r\n                    <label>Duration:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        name=\"duration\"\r\n                        value={activities.duration}\r\n                        onChange= {handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Season: </label>\r\n                    <select\r\n                        name=\"season\"\r\n                        value={activities.season}\r\n                        onChange= {handleChange}\r\n                    >\r\n                        <option value=\"summer\">Summer</option>\r\n                        <option value=\"spring\">Spring</option>\r\n                        <option value=\"autumn\">Autumn</option>\r\n                        <option value=\"winter\">Winter</option>\r\n                    </select>\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Countries: </label>\r\n                    <select\r\n                        name=\"countries\"\r\n                        value={activities.countries}\r\n                        onChange= {handleChange}\r\n                    >\r\n                        <option>Select country</option>\r\n                            {\r\n                                countries.length > 0 && countries.map(el =>\r\n                                    {\r\n                                        return (\r\n                                            <option value={el.id} key={el.id}>{el.name}</option>\r\n                                        )\r\n                                })\r\n                            }\r\n                    </select>\r\n                </div>\r\n                <input type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default AddActivity;\r\n\r\n\r\n// import React from 'react';\r\n// import Nav from '../Nav/Nav';\r\n\r\n\r\n// export default function Form() {\r\n//     let [activity, setActivity] = React.useState(\r\n//                 {\r\n//                     name: '',\r\n//                     difficulty: 3,\r\n//                     duration: '',\r\n//                     season: 'summer',\r\n//                     countries: ''\r\n//                 });\r\n\r\n//     let [errors, setErrors] = React.useState({});\r\n//     let [countries, setCountries] = React.useState([]);\r\n//     let [addCountries, setAddCountries] = React.useState([]);\r\n\r\n//     React.useEffect(() =>{\r\n//         fetch('http://localhost:3001/countries/')\r\n//         .then(resp => resp.json())\r\n//         .then(data =>{\r\n//                 let myMap = data.map(el => {return {id: el.id, name: el.name}})\r\n//                 myMap = myMap.sort(SortArray)\r\n//                 setCountries(myMap);\r\n//             });\r\n//     },[]);\r\n\r\n//     function SortArray(x, y){\r\n//         return x.name.localeCompare(y.name, 'fr', {ignorePunctuation: true});\r\n//     }\r\n\r\n//     function handleChange(e){\r\n//         e.preventDefault();\r\n//         setActivity((prev) => ({...prev, [e.target.name]: e.target.value}));\r\n//         setErrors(validation({...activity, [e.target.name]: e.target.value}));\r\n//     }\r\n\r\n//     function handleChangeName(e){\r\n//         e.preventDefault();\r\n//         setActivity((prev) => ({...prev, name: e.target.value.trimStart().toLowerCase()}));\r\n//         setErrors(validation({...activity, name: e.target.value.trimStart().toLowerCase()}));\r\n//     }\r\n\r\n//     function handleSubmit(e){\r\n//         e.preventDefault();\r\n//         if(Object.keys(errors).length === 0){\r\n//             fetch('http://localhost:3001/activities', {\r\n//                     method: 'POST',\r\n//                     headers: {'Content-Type': 'application/json;charset=utf-8'},\r\n//                     body: JSON.stringify(\r\n//                         {\r\n//                             name: activity.name,\r\n//                             difficulty: activity.difficulty,\r\n//                             duration: activity.duration,\r\n//                             season: activity.season,\r\n//                             country: addCountries\r\n//                         })\r\n//             })\r\n//             .then(res => res.json())\r\n//             .then(res =>{\r\n//                 if(res.hasOwnProperty('msg')) {\r\n//                     alert(res.msg);\r\n//                 }else {\r\n//                     alert(res.error);\r\n//                 }\r\n//                 setActivity({name: '', difficulty: '', duration: '', season: 'summer', countries: ''});\r\n//                 setAddCountries([]);\r\n//             })\r\n//             .catch(e => console.log(e));\r\n//         }\r\n//     }\r\n\r\n//     function validation(){\r\n//         let errors = {};\r\n//         const regexName = /^[a-zA-\\s]+(?: [a-zA-\\s]+)*$/i;\r\n//         if(activity.name === '') {\r\n//             errors.name = 'Insert the name';\r\n//         }\r\n//         if(!regexName.test(activity.name)) {\r\n//             errors.name = 'The name must has only letters';\r\n//         }\r\n//         // if(activity.name.length < 3 || activity.name.length > 20) errors.name = \"The name's size isn't valid\";\r\n\r\n//         if(![1,2,3,4,5].includes(parseInt(activity.difficulty))) {\r\n//             errors.difficulty = \"The difficult isn't valid\"\r\n//         }\r\n\r\n//         let hours = Math.trunc(Number(activity.duration));\r\n//         let minutes = hours === 0 ? Number(activity.duration) * 100 : (Number(activity.duration) % hours) * 100;\r\n\r\n//         if((hours > 8) || (minutes === 0 && hours <= 0)) {\r\n//             errors.duration = \"The amount of hours is not valid\";\r\n//         }\r\n//         if(minutes < 0 || minutes > 59) {\r\n//             errors.duration = \"The amount of minutes is not valid\";\r\n//         }\r\n//         if(!['summer','spring','autumn','winter'].includes(activity.season)) {\r\n//             errors.season = \"The season isn't valid\";\r\n//         }\r\n//         if(addCountries.length < 0) {\r\n//             errors.countries = \"Select a country\";\r\n//         }\r\n//         return errors;\r\n//     }\r\n\r\n//     function addCountry(e){\r\n//         e.preventDefault();\r\n//         if (activity.countries === \"\") {\r\n//             setErrors({...errors, countries: 'Select a country as'});\r\n//         }else{\r\n//             if(addCountries.includes(activity.countries)){\r\n//                 setErrors({...errors, countries: 'You are already selected this country'});\r\n                \r\n//             }else{\r\n//                 setAddCountries([...addCountries, activity.countries]);\r\n//                 setActivity({...activity, countries: ''});\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     function deleteCountry(id){\r\n//         let newList = addCountries.filter(country => country !== id);\r\n//         setAddCountries(newList);\r\n//     }\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//         <div>\r\n//             <Nav/>\r\n//             <div>\r\n//                     <form>\r\n//                     <div>\r\n//                                 <p>New activity</p>\r\n//                     </div>\r\n//                     <div>\r\n//                         <label>Name: </label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             title=\"The name's size must be a min 3, max 20 and must has only letters\"\r\n//                             autocomplete=\"off\"\r\n//                             name=\"name\"\r\n//                             value={activity.name}\r\n//                             onChange={(e) => handleChangeName(e)}\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label>Duration: </label>\r\n//                         <input\r\n//                             type=\"number\"\r\n//                             min=\"0\"\r\n//                             max=\"10\"\r\n//                             step=\"1.00\"\r\n//                             title='The activity must has a duration between 1 min and 10 hours'\r\n//                             placeholder=\"hrs\"\r\n//                             name=\"duration\"\r\n//                             value={activity.duration}\r\n//                             onChange={(e) => handleChange(e)}\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                     <div>\r\n//                         <label>Difficult: </label>\r\n//                         <select\r\n//                             name=\"difficult\"\r\n//                             value={activity.difficulty}\r\n//                             onChange={(e) => handleChange(e)}\r\n//                         >\r\n//                             <option value=\"1\">So easy</option>\r\n//                             <option value=\"2\">Easy</option>\r\n//                             <option value=\"3\">Normal</option>\r\n//                             <option value=\"4\">Hard</option>\r\n//                             <option value=\"5\">So hard</option>\r\n//                         </select>\r\n//                     </div>\r\n\r\n//                     <div>\r\n//                         <label>Season: </label>\r\n//                         <select\r\n//                             name=\"season\"\r\n//                             value={activity.season}\r\n//                             onChange={(e) => handleChange(e)}\r\n//                         >\r\n//                             <option value=\"summer\">Summer</option>\r\n//                             <option value=\"spring\">Spring</option>\r\n//                             <option value=\"autumn\">Autumn</option>\r\n//                             <option value=\"winter\">Winter</option>\r\n//                         </select>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label>Countries: </label>\r\n//                         <select\r\n//                             name=\"countries\"\r\n//                             value={activity.countries}\r\n//                             onChange={(e) => handleChange(e)}\r\n//                         >\r\n//                         <option value=\"default\" selected>Select country</option>\r\n//                             {\r\n//                                 countries.length > 0 && countries.map(el =>\r\n//                                     {\r\n//                                         return (\r\n//                                             <option value={el.id}>{el.name}</option>\r\n//                                         )\r\n//                                     })\r\n//                             }\r\n//                         </select>\r\n//                         <button onClick={(e) => addCountry(e)}>Add country</button>\r\n//                         </div>\r\n\r\n//                         <div>\r\n//                             <p>List of countries:</p>\r\n//                             <div>\r\n//                                 {\r\n//                                     addCountries.length > 0 && addCountries.map(el =>\r\n//                                         {\r\n//                                             return (\r\n//                                                 <div>\r\n//                                                     <span>{el}</span>\r\n//                                                         <button type=\"button\" onClick={() => deleteCountry(el)}>X</button>\r\n//                                                 </div>\r\n//                                             )\r\n//                                         })\r\n//                                         }\r\n//                             </div>\r\n//                         </div>\r\n//                         <button \r\n//                             onClick={(e) => handleSubmit(e)}>Create activity\r\n//                         </button>\r\n//                     </form>\r\n//                 </div>\r\n//         </div>\r\n//         </React.Fragment>\r\n//     )\r\n// }\r\n"],"mappings":"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,QAEL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eACNzB,OAAA;QAAO2B,IAAI,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAAAvB,EAAA,CAzGCD,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AA4GjB,eAAeA,WAAW;;AAG1B;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}